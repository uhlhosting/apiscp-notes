{"componentChunkName":"component---node-modules-gatsby-theme-code-notes-src-templates-note-js","path":"/preference-manipulation/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Preference manipulation\",\n  \"tags\": [\"api\", \"cpcmd\"],\n  \"emoji\": \"üó≥Ô∏è\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-php\"\n  }), \"common_load_preferences(): array;\\ncommon_save_preferences(array $prefs): bool;\\n\")), mdx(\"p\", null, \"Masquerade as a specific site (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-d domain\"), \") and/or user (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-u user\"), \") to retrieve the user preferences as JSON (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-o format\"), \"). Manipulate using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jq\"), \", then save the preferences back declaring source input format (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-i format\"), \") as JSON. \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"# jq isn't always installed\\nyum install -y jq\\n# set nexus.notify-create value to 1\\ncpcmd -i json common:save-preferences \\\"$(cpcmd -o json common:load-preferences | jq -r '.nexus[\\\"notify-create\\\"]=1')\\\"\\n\")), mdx(\"p\", null, \"It's also possible to use PHP's serialize (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"serialize()\"), \"/\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"unserialize()\"), \") if the format is changed from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"json\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"serialize\"), \". \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"cpcmd -i serialize common:save-preferences \\\"$(cpcmd -o serialize common:load-preferences | php -r '$prefs = unserialize(file_get_contents(\\\"php://stdin\\\")); $prefs[\\\"nexus\\\"][\\\"notify-create\\\"] = 1; echo serialize($prefs);')\\\"\\n\")), mdx(\"p\", null, \"However it's clear to see JSON has its terse advantages.\"), mdx(\"h2\", {\n    \"id\": \"see-also\"\n  }, \"See also\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://docs.apiscp.com/admin/cpcmd-examples/#collections\"\n  }), \"Collections\"), \", covers \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"jq\"), \" examples (docs.apiscp.com)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://stedolan.github.io/jq/tutorial/\"\n  }), \"jq Tutorial\"), \" (stedolan.github.io)\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Preference manipulation","tags":["api","cpcmd"],"emoji":"üó≥Ô∏è","link":null},"fields":{"dateModified":"7th Feb 2022","slug":"/preference-manipulation/"},"tableOfContents":{"items":[{"url":"#see-also","title":"See also"}]},"parent":{"__typename":"File","relativePath":"preference-manipulation.md"}}},"pageContext":{"id":"0433dcf1-11af-5147-acfa-dea32b8acdbf","previous":{"id":"57e2a964-8f38-5c1e-9471-18abf10064b1","frontmatter":{"title":"Pulled back packages","tags":["yum"]},"fields":{"slug":"/pulled-back-packages/"}},"next":{"id":"8804d2d8-9168-5cf1-99ed-2925b317b262","frontmatter":{"title":"PHP User Overrides","tags":["php","memory","upload","overrides"]},"fields":{"slug":"/php-user-overrides/"}},"hasUntagged":false,"basePath":"/"}},"staticQueryHashes":["1437003973","2744905544","3664657028","467212769","467212769"]}